#ifndef _INCLUDE_EIFACE_H_
#define _INCLUDE_EIFACE_H_

struct IVEngineServer_iface
{
	void * ChangeLevel;
	void * IsMapValid;
	void * IsDedicatedServer;
	void * IsInEditMode;
	void * GetLaunchOptions;
	void * PrecacheModel;
	void * PrecacheSentenceFile;
	void * PrecacheDecal;
	void * PrecacheGeneric;
	void * IsModelPrecached;
	void * IsDecalPrecached;
	void * IsGenericPrecached;
	void * GetClusterForOrigin;
	void * GetPVSForCluster;
	void * CheckOriginInPVS;
	void * CheckBoxInPVS;
	void * GetPlayerUserId;
	void * GetPlayerNetworkIDString;
	void * IsUserIDInUse;
	void * GetLoadingProgressForUserID;
	void * GetEntityCount;
	void * GetPlayerNetInfo;
	void * CreateEdict;
	void * RemoveEdict;
	void * PvAllocEntPrivateData;
	void * FreeEntPrivateData;
	void * SaveAllocMemory;
	void * SaveFreeMemory;
	void * EmitAmbientSound;
	void * FadeClientVolume;
	void * SentenceGroupPick;
	void * SentenceGroupPickSequential;
	void * SentenceIndexFromName;
	void * SentenceNameFromIndex;
	void * SentenceGroupIndexFromName;
	void * SentenceGroupNameFromIndex;
	void * SentenceLength;
	void * ServerCommand;
	void * ServerExecute;
	void * ClientCommand;
	void * LightStyle;
	void * StaticDecal;
	void * Message_DetermineMulticastRecipients;
	void * EntityMessageBegin;
	void * UserMessageBegin;
	void * MessageEnd;
	void * ClientPrintf;
	void * Con_NPrintf;
	void * Con_NXPrintf;
	void * SetView;
	void * OBSOLETE_Time;
	void * CrosshairAngle;
	void * GetGameDir;
	void * CompareFileTime;
	void * LockNetworkStringTables;
	void * CreateFakeClient;
	void * GetClientConVarValue;
	void * ParseFile;
	void * CopyFile;
	void * ResetPVS;
	void * AddOriginToPVS;
	void * SetAreaPortalState;
	void * PlaybackTempEntity;
	void * CheckHeadnodeVisible;
	void * CheckAreasConnected;
	void * GetArea;
	void * GetAreaBits;
	void * GetAreaPortalPlane;
	void * LoadGameState;
	void * LoadAdjacentEnts;
	void * ClearSaveDir;
	void * GetMapEntitiesString;
	void * TextMessageGet;
	void * LogPrint;
	void * IsLogEnabled;
	void * BuildEntityClusterList;
	void * SolidMoved;
	void * TriggerMoved;
	void * CreateSpatialPartition;
	void * DestroySpatialPartition;
	void * DrawMapToScratchPad;
	void * GetEntityTransmitBitsForClient;
	void * IsPaused;
	void * GetTimescale;const
	void * ForceExactFile;
	void * ForceModelBounds;
	void * ClearSaveDirAfterClientLoad;
	void * SetFakeClientConVarValue;
	void * ForceSimpleMaterial;
	void * IsInCommentaryMode;
	void * IsLevelMainMenuBackground;
	void * SetAreaPortalStates;
	void * NotifyEdictFlagsChange;
	void * GetPrevCheckTransmitInfo;
	void * GetSharedEdictChangeInfo;
	void * AllowImmediateEdictReuse;
	void * IsInternalBuild;
	void * GetChangeAccessor;
	void * GetMostRecentlyLoadedFileName;
	void * GetSaveFileName;
	void * WriteSavegameScreenshot;
	void * GetLightForPointListenServerOnly;
	void * TraceLightingListenServerOnly;
	void * CleanUpEntityClusterList;
	void * SetAchievementMgr;
	void * GetAchievementMgr;
	void * GetAppID;
	void * IsLowViolence;
	void * IsAnyClientLowViolence;
	void * StartQueryCvarValue;
	void * InsertServerCommand;
	void * GetPlayerInfo;
	void * IsClientFullyAuthenticated;
	void * SetDedicatedServerBenchmarkMode;
	void * IsSplitScreenPlayer;
	void * GetSplitScreenPlayerAttachToEdict;
	void * GetNumSplitScreenUsersAttachedToEdict;
	void * GetSplitScreenPlayerForEdict;
	void * IsOverrideLoadGameEntsOn;
	void * ForceFlushEntity;
	void * GetSinglePlayerSharedMemorySpace;
	void * AllocLevelStaticData;
	void * GetClusterCount;
	void * GetAllClusterBounds;
	void * IsCreatingReslist;
	void * IsCreatingXboxReslist;
	void * IsDedicatedServerForXbox;
	void * Pause;
	void * SetTimescale;
	void * SetGamestatsData;
	void * GetGamestatsData;
	void * GetClientSteamID;
	void * HostValidateSession;
	void * RefreshScreenIfNecessary;
	void * AllocLevelStaticDataName;
	void * ClientCommandKeyValues;
	void * GetClientXUID;
};

struct IVEngineServer
{
	IVEngineServer_iface * vptr;
};

#endif // _INCLUDE_EIFACE_H_